{"version":3,"sources":["components/UI/Card.js","components/hooks/useHttp.js","components/UI/ErrorModal.js","components/UI/LoadingIndicator.js","components/Ingredients/IngredientForm.js","components/Ingredients/IngredientList.js","components/Ingredients/Search.js","components/Ingredients/Ingredients.js","components/AuthContext.js","components/Auth.js","App.js","index.js"],"names":["Card","props","className","children","initialState","isLoading","error","requestType","data","extraDetail","httpReducer","state","action","type","reqType","responseData","extraData","errorMessage","Error","useHttp","useReducer","httpState","dispatchHttp","clearError","useCallback","sendHttpRequest","requestUrl","requestMethod","requestBody","requestData","fetch","method","body","headers","then","response","json","catch","ErrorModal","React","memo","Fragment","onClick","onClose","LoadingIndicator","IngredientForm","useState","itemName","setItemName","itemQuantity","setItemQuantity","onSubmit","event","preventDefault","addItem","name","quantity","htmlFor","id","value","onChange","target","IngredientList","items","map","ig","key","removeItem","bind","Search","setSearchResult","searchName","setSearchName","searchRef","useRef","useEffect","timerId","setTimeout","current","params","length","itemList","push","clearTimeout","ref","itemsReducer","newItem","filter","item","deleteId","Ingredients","dispatchItems","JSON","stringify","itemId","searchResult","ingredientList","useMemo","AuthContext","createContext","isLoggedIn","logInAction","AuthContextProvider","logIn","setLogIn","Provider","Auth","authContext","useContext","App","contents","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.430ab7ba.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: null,\r\n  requestType: null,\r\n  data: null,\r\n  extraDetail: null,\r\n};\r\n\r\nconst httpReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SEND\":\r\n      return {\r\n        isLoading: true,\r\n        error: null,\r\n        data: null,\r\n        extraDetail: null,\r\n        requestType: action.reqType,\r\n      };\r\n    case \"RESPONSE\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: null,\r\n        data: action.responseData,\r\n        extraDetail: action.extraData,\r\n      };\r\n    case \"ERROR\":\r\n      return { isLoading: false, error: action.errorMessage };\r\n    case \"CLEAR\":\r\n      return initialState;\r\n    default:\r\n      throw new Error(\"Soemthing went wrong\");\r\n  }\r\n};\r\n\r\nconst useHttp = () => {\r\n  const [httpState, dispatchHttp] = useReducer(httpReducer, initialState);\r\n\r\n  const clearError = useCallback(() => dispatchHttp({ type: \"CLEAR\" }), []);\r\n\r\n  const sendHttpRequest = useCallback(\r\n    (requestUrl, requestMethod, requestBody, requestData, requestType) => {\r\n      dispatchHttp({ type: \"SEND\", reqType: requestType });\r\n\r\n      fetch(requestUrl, {\r\n        method: requestMethod,\r\n        body: requestBody,\r\n        headers: { \"Content-Type\": \"appication/json\" },\r\n      })\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((responseData) => {\r\n          dispatchHttp({\r\n            type: \"RESPONSE\",\r\n            responseData: responseData,\r\n            extraData: requestData,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          dispatchHttp({\r\n            type: \"ERROR\",\r\n            errorMessage: \"Something went wrong!\",\r\n          });\r\n        });\r\n    },\r\n    []\r\n  );\r\n  return {\r\n    isLoading: httpState.isLoading,\r\n    error: httpState.error,\r\n    data: httpState.data,\r\n    requestType: httpState.requestType,\r\n    extraDetail: httpState.extraDetail,\r\n    sendHttpRequest: sendHttpRequest,\r\n    clearError: clearError,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n","import React from 'react';\n\nimport './ErrorModal.css';\n\nconst ErrorModal = React.memo(props => {\n  return (\n    <React.Fragment>\n      <div className=\"backdrop\" onClick={props.onClose} />\n      <div className=\"error-modal\">\n        <h2>An Error Occurred!</h2>\n        <p>{props.children}</p>\n        <div className=\"error-modal__actions\">\n          <button type=\"button\" onClick={props.onClose}>\n            Okay\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingIndicator.css';\n\nconst LoadingIndicator = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import React, { useState } from \"react\";\nimport Spinner from \"../UI/LoadingIndicator\";\nimport Card from \"../UI/Card\";\nimport \"./IngredientForm.css\";\n\nconst IngredientForm = React.memo((props) => {\n  //Initializing a State\n  const [itemName, setItemName] = useState(\"\");\n  const [itemQuantity, setItemQuantity] = useState(\"\");\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.addItem({\n      name: itemName,\n      quantity: itemQuantity,\n    });\n  };\n\n  //Handles the onChange Method on the Input Fields using setState() method if the State is a Object.\n  // const [item, setItem] = useState({ itemName: \"\", itemQuantity: \"\" });\n  // const changeInputHandler = (event) => {\n  //   const inputValue = event.target.value;\n  //   if (event.target.name === \"title\") {\n  //     setItem((prevState) => ({\n  //       itemName: inputValue,\n  //       itemQuantity: prevState.itemQuantity,\n  //     }));\n  //   } else {\n  //     setItem((prevState) => ({\n  //       itemQuantity: inputValue,\n  //       itemName: prevState.itemName,\n  //     }));\n  //   }\n  // };\n\n  return (\n    <section className=\"ingredient-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">NAME</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={itemName}\n              name=\"title\"\n              onChange={(event) => setItemName(event.target.value)}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"Quantity\">QUANTITY</label>\n            <input\n              type=\"number\"\n              id=\"Quantity\"\n              value={itemQuantity}\n              name=\"Quantity\"\n              onChange={(event) => setItemQuantity(event.target.value)}\n            />\n          </div>\n          <div className=\"ingredient-form__actions\">\n            <button type=\"submit\">Add Item</button>\n            {props.isLoading && <Spinner />}\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default IngredientForm;\n","import React from \"react\";\n\nimport \"./IngredientList.css\";\n\nconst IngredientList = (props) => {\n  return (\n    <section className=\"ingredient-list\">\n      <h2>Added Items</h2>\n      <ul>\n        {props.items.map((ig) => (\n          <li key={ig.id} onClick={props.removeItem.bind(this, ig.id)}>\n            <span>{ig.name}</span>\n            <span>{ig.quantity}x</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default IngredientList;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport \"./Search.css\";\n\nconst Search = React.memo((props) => {\n  //Props\n  const { setSearchResult } = props;\n  //State to Store Search Keyword\n  const [searchName, setSearchName] = useState(\"\");\n  //Create Ref\n  const searchRef = useRef();\n\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      if (searchName === searchRef.current.value) {\n        const params =\n          searchName.length === 0\n            ? \"\"\n            : `?orderBy=\"name\"&equalTo=\"${searchName}\"`;\n        fetch(\n          \"https://biller-app-d0f61.firebaseio.com/shoppinglist.json\" + params\n        )\n          .then((response) => response.json())\n          .then((responseData) => {\n            const itemList = [];\n            for (const key in responseData) {\n              itemList.push({\n                id: key,\n                name: responseData[key].name,\n                quantity: responseData[key].quantity,\n              });\n            }\n            setSearchResult(itemList);\n          });\n      }\n    }, 500);\n\n    return () => clearTimeout(timerId);\n  }, [searchName, setSearchResult]);\n\n  return (\n    <section className=\"search\">\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          <input\n            type=\"text\"\n            ref={searchRef}\n            value={searchName}\n            onChange={(event) => setSearchName(event.target.value)}\n          />\n        </div>\n      </Card>\n    </section>\n  );\n});\n\nexport default Search;\n","import React, { useCallback, useEffect, useMemo, useReducer } from \"react\";\nimport useHttp from \"../hooks/useHttp\";\nimport ErrorScreen from \"../UI/ErrorModal\";\nimport IngredientForm from \"./IngredientForm\";\nimport IngredientList from \"./IngredientList\";\nimport Search from \"./Search\";\n\nconst itemsReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET\":\n      return action.items;\n    case \"ADD\":\n      return [...state, action.newItem];\n    case \"DEL\":\n      return state.filter((item) => item.id !== action.deleteId);\n    default:\n      throw new Error(\"Soemthing went wrong\");\n  }\n};\n\nconst Ingredients = () => {\n  const [items, dispatchItems] = useReducer(itemsReducer, []);\n  const {\n    isLoading,\n    error,\n    data,\n    requestType,\n    extraDetail,\n    sendHttpRequest,\n    clearError,\n  } = useHttp();\n\n  useEffect(() => {\n    if (!isLoading && !error) {\n      if (requestType === \"DELETE\")\n        dispatchItems({ type: \"DEL\", deleteId: extraDetail });\n      else if (requestType === \"ADD\")\n        dispatchItems({\n          type: \"ADD\",\n          newItem: { id: data.name, ...extraDetail },\n        });\n    }\n  }, [isLoading, error, requestType, extraDetail, data]);\n\n  //Adding a new item to the Items list\n  const addItem = useCallback(\n    (item) => {\n      sendHttpRequest(\n        \"https://biller-app-d0f61.firebaseio.com/shoppinglist.json\",\n        \"POST\",\n        JSON.stringify(item),\n        item,\n        \"ADD\"\n      );\n    },\n    [sendHttpRequest]\n  );\n\n  //Remove a item from the Items list\n  const removeItem = useCallback(\n    (itemId) => {\n      sendHttpRequest(\n        `https://biller-app-d0f61.firebaseio.com/shoppinglist/${itemId}.json`,\n        \"delete\",\n        null,\n        itemId,\n        \"DELETE\"\n      );\n    },\n    [sendHttpRequest]\n  );\n\n  //Displays the Search Result\n  const setSearchResult = useCallback((searchResult) => {\n    dispatchItems({\n      type: \"SET\",\n      items: searchResult,\n    });\n  }, []);\n\n  //Creates MEMO to avoid unnecessary rerendering\n  const ingredientList = useMemo(() => {\n    return <IngredientList items={items} removeItem={removeItem} />;\n  }, [items, removeItem]);\n\n  return (\n    <div className=\"App\">\n      {error && <ErrorScreen onClose={clearError}>{error}</ErrorScreen>}\n      <IngredientForm addItem={addItem} isLoading={isLoading} />\n      <section>\n        <Search setSearchResult={setSearchResult} />\n        {ingredientList}\n      </section>\n    </div>\n  );\n};\n\nexport default Ingredients;\n","import React, { useState } from \"react\";\r\n\r\nexport const AuthContext = React.createContext({\r\n  isLoggedIn: false,\r\n  logInAction: () => {},\r\n});\r\n\r\nconst AuthContextProvider = (props) => {\r\n  const [logIn, setLogIn] = useState(false);\r\n\r\n  const logInHandler = () => {\r\n    setLogIn(true);\r\n  };\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ isLoggedIn: logIn, logInAction: logInHandler }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","import React, { useContext } from \"react\";\n\nimport Card from \"./UI/Card\";\nimport \"./Auth.css\";\nimport { AuthContext } from \"./AuthContext\";\n\nconst Auth = (props) => {\n  const authContext = useContext(AuthContext);\n\n  return (\n    <div className=\"auth\">\n      <Card>\n        <h2>You are not authenticated!</h2>\n        <p>Please log in to continue.</p>\n        <button onClick={authContext.logInAction}>Log In</button>\n      </Card>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { Fragment, useContext } from \"react\";\nimport Card from \"./components/UI/Card\";\nimport Ingredients from \"./components/Ingredients/Ingredients\";\nimport { AuthContext } from \"./components/AuthContext\";\nimport Auth from \"./components/Auth\";\nimport \"./App.css\";\n\nconst App = (props) => {\n  const authContext = useContext(AuthContext);\n  let contents = <Auth />;\n  if (authContext.isLoggedIn) contents = <Ingredients />;\n\n  return (\n    <Fragment>\n      <section className=\"header-section\">\n        <Card>\n          <h2>Add to Shopping List </h2>\n        </Card>\n      </section>\n      {contents}\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport AuthContextProvider from \"./components/AuthContext\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <App />\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}